steps:
  # 1️⃣ Build Docker image (with cache)
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - -c
      - |
        echo "⏳ Trying to pull cache image..."
        if docker pull asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:latest; then
          echo "✅ Found cache image. Building with cache..."
          docker build \
            --cache-from=asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:latest \
            -t asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:$SHORT_SHA \
            .
        else
          echo "⚠️ No cache found. Building from scratch..."
          docker build \
            -t asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:$SHORT_SHA \
            .
        fi

  # 2️⃣ Push short-sha image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - 'asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:$SHORT_SHA'

  # 3️⃣ Tag as latest
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - tag
      - 'asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:$SHORT_SHA'
      - 'asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:latest'

  # 4️⃣ Push latest tag
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - 'asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:latest'

  # 5️⃣ Deploy to Cloud Run (existing step)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - travel-website
      - --image=asia-south1-docker.pkg.dev/$PROJECT_ID/travelwebsite-deploy-test/travel-website:$SHORT_SHA
      - --region=asia-south1
      - --platform=managed
      - --allow-unauthenticated

  # 6️⃣ Create new instance template with updated container image
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'compute', 'instance-templates', 'create', 'travel-template-${SHORT_SHA}',
        '--machine-type=e2-medium',
        '--image-family=cos-stable',
        '--image-project=cos-cloud',
        '--tags=http-server',
        '--metadata',
        'google-logging-enabled=true',
        '--metadata',
        'gce-container-declaration=spec:\n  containers:\n    - name: travel-website\n      image: asia-south1-docker.pkg.dev/'"$PROJECT_ID"'/travelwebsite-deploy-test/travel-website:'"$SHORT_SHA"'\n      stdin: false\n      tty: false\n  restartPolicy: Always'
      ]

  # 7️⃣ Point MIG to new template
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'compute', 'instance-groups', 'managed', 'set-instance-template',
        'ipv4-v6-mig',                      # MIG name
        '--template=travel-template-${SHORT_SHA}',
        '--zone=asia-south1-a'              # Zonal MIG
      ]

  # 8️⃣ Replace all instances in MIG
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'compute', 'instance-groups', 'managed', 'rolling-action', 'replace',
        'ipv4-v6-mig',
        '--zone=asia-south1-a',
        '--max-surge=0',
        '--max-unavailable=1'
      ]

options:
  logging: CLOUD_LOGGING_ONLY
